复制含有随机指针节点的链表
【题目】 一种特殊的链表节点类描述如下：
 public class Node { public int value; public Node next; public Node rand; public Node(int data)
  { this.value = data; } }
  Node类中的value是节点值，next指针和正常单链表中next指针的意义 一 样，都指向下一个节点，rand指针是Node类中新增的指针，这个指 针可 能指向链表中的任意一个节点，也可能指向null。
   给定一个由 Node节点类型组成的无环单链表的头节点head，请实现一个 函数完成 这个链表中所有结构的复制，并返回复制的新链表的头节点。
   进阶： 不使用额外的数据结构，只用有限几个变量，且在时间复杂度为 O(N) 内完成原问题要实现的函数。


   思路1：使用HashMap,键存放原链表的元素，值存放拷贝的元素。
          map.get(cur).next=map.get(cur.next); .get得到值为拷贝的元素


   思路2：让当前节点指向他的拷贝节点，这样一个节点连一个拷贝节点就组成了一个
   链表，然后分割链表。